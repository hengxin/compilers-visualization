syntax = "proto2";
package hmb.protobuf;


//=============================== ⬇  ATN  ⬇ ===============================

message ItemStyle {
  optional string color = 1 [default = 'rgb(0,0,255)'];
}

message AtnNode {
  required string id = 1;  // 为了方便以及减少出错，约定id为stateNumber
  required string name = 2;
  required int32 x = 3;
  required int32 y = 4;
  required bool fixed = 5; // default false
  required ItemStyle itemStyle = 6;
}

message Label {
  required bool show = 1 [default = true]; // always true
  required string formatter = 2; // string of line
}

message LineStyle {
  optional double curveness = 1 [default = 0];
}

message AtnLink {
  required string source = 2;  // node可能重名，下标好麻烦，因此使用唯一标识stateNumber
  required string target = 3;  // node可能重名，下标好麻烦，因此使用唯一标识stateNumber
  required Label label = 4;
  required LineStyle lineStyle =5;
}

message SubAugmentedTransitionNetwork {
  repeated AtnNode data = 1;  // atnNode
  repeated AtnLink links = 2;  // atnLink
}

message AugmentedTransitionNetworks {
  repeated SubAugmentedTransitionNetwork subATN = 2;
}

message InitialState {
  required AugmentedTransitionNetworks lexerATN = 1;
  required AugmentedTransitionNetworks parserATN = 2;
}

//=============================== ⬆  ATN  ⬆ ===============================






//=============================== ⬇ lexer ⬇ ===============================

message LexerState{
}

message LexerResult {
  repeated LexerState lexerState = 1;
}

//=============================== ⬆ lexer ⬆ ===============================






//=============================== ⬇ parser ⬇ ===============================

message TreeNode{
  required string name = 1;
  repeated TreeNode children = 2;
}

message ParserState{
  required TreeNode root = 1;
}

message ParserResult {
  repeated ParserState parserState = 1;
}

//=============================== ⬆ parser ⬆ ===============================
